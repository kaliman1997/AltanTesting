/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package altantesting;

import avanzadagroup.net.altanAPI.*;
import javax.swing.JFileChooser;

/**
 *
 * @author Arturo Ruiz
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        msisdnTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        accessTokebLb = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        locationTF = new javax.swing.JTextField();
        requestCB = new javax.swing.JComboBox<>();
        sendBttn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        requestTypeCB = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        imeiTF = new javax.swing.JTextField();
        accessCodeTF = new javax.swing.JTextField();
        offeringCB = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        orderIdTF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        ICCTF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        fileTF = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jTextPane1);

        jLabel1.setText("MSISDN");

        msisdnTF.setText("5584614839");
        msisdnTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msisdnTFActionPerformed(evt);
            }
        });

        jLabel2.setText("OfferingId");

        jLabel3.setText("AccessToken");

        jLabel4.setText("Location");

        jLabel5.setText("Select Request");

        locationTF.setText("19.3991531,-99.2764038");
        locationTF.setToolTipText("");

        requestCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AccessToken" }));
        requestCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestCBActionPerformed(evt);
            }
        });

        sendBttn.setText("SEND");
        sendBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBttnActionPerformed(evt);
            }
        });

        jLabel6.setText("Request Type");

        requestTypeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seguridad", "Calidad de Servicio", "Configuracion", "Clientes", "Clientes Batch" }));
        requestTypeCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTypeCBActionPerformed(evt);
            }
        });

        jLabel7.setText("IMEI");

        imeiTF.setToolTipText("");

        accessCodeTF.setEditable(false);
        accessCodeTF.setText("Not Available");

        jLabel8.setText("orderId");
        jLabel8.setToolTipText("");

        jLabel9.setText("ICC");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Altan Manual Testing v1.2");
        jLabel10.setToolTipText("");

        jButton1.setText("BatchFile");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(229, 229, 229)
                                .addComponent(accessTokebLb, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(requestTypeCB, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(msisdnTF, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(offeringCB, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(imeiTF, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(locationTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)))
                                        .addGap(85, 85, 85)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(requestCB, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(sendBttn))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel8)
                                                    .addComponent(jButton1))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(accessCodeTF)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(0, 0, Short.MAX_VALUE)
                                                        .addComponent(orderIdTF, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(fileTF)))))
                                    .addComponent(ICCTF, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(accessTokebLb)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(msisdnTF)
                        .addComponent(jLabel3)
                        .addComponent(accessCodeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(offeringCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(orderIdTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(locationTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fileTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(imeiTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(ICCTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(requestCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(sendBttn))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(requestTypeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addText(String text) {
        jTextPane1.setText(jTextPane1.getText() + "\n" + text);
    }

    private void sendBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBttnActionPerformed
        String selectedItem = (String) requestCB.getSelectedItem();

        String operation = "";
        switch (selectedItem) {
            ////Security
            case "AccessToken":
                OAuth oauth = new OAuth();
                accessCodeTF.setText(oauth.getToken().getAccessToken());
                addText("Access Token is " + oauth.getToken().getAccessToken());
                break;

            //Serviciability
            case "Serviciability":
                Coverage coverage = new Coverage();
                String coverageResult = coverage.check(accessCodeTF.getText(), locationTF.getText()).getResult();
                addText("Coverage is " + coverageResult);
                break;

            ////Configuracion
            case "Estado de una orden":
                addText("OrderStatus:\n"
                        + new OrderStatus().
                                status(orderIdTF.getText()).getJsonResponse());
                break;

            ///Client Management
            case "Baja de MSISDN":
                addText("Deactivate " + new Deactivate().
                        deactivate(msisdnTF.getText()).getJsonResponse());                
                break;
                
            case "Reactivar MSISDN":
                addText("Reactivate " + new Reactivate().
                        reactivate(msisdnTF.getText()).getJsonResponse());
                break;
                
            case "Consultar Perfil":
                Profile profile = new Profile();
                addText("Profile Result: \n" + profile.sendRequest(
                        accessCodeTF.getText(), msisdnTF.getText()));
                break;
            case "Suspender MSISDN":
                addText(new Suspend().suspend(msisdnTF.getText()).getJsonResponse());
                break;

            case "Reanudar MSISDN":
                addText(new Resume().resume(msisdnTF.getText()).getJsonResponse());
                break;

            case "Activar Oferta MSISDN":
                String selectedOffer = (String) offeringCB.getSelectedItem();

                String selected[] = selectedOffer.split("\\|");

                String offeringId = selected[0];

                //addText(offeringId);
                addText("Activar Oferta: \n"
                        + new Activation().activate(msisdnTF.getText(),
                                offeringId, locationTF.getText()).getJsonResponse());
                break;

            case "Compra de Bonos":
                addText("CompraBonos: \n"
                        + new Purchase().activate(msisdnTF.getText(),
                                offeringCB.getSelectedItem().toString().
                                        split("\\|")[0]).getJsonResponse());
                break;

            case "Cambiar Oferta Primaria":
                addText("Subscriber Patch Offering:\n"
                        + new SubscriberPatch().changePrimaryOffer(
                                msisdnTF.getText(), offeringCB.getSelectedItem().toString().
                                split("\\|")[0], locationTF.getText()
                        ).getJsonResponse()
                );
                break;

            case "Cambio de SIM":
                addText("Subscriber Patch ICC:\n"
                        + new SubscriberPatch().changeICC(
                                msisdnTF.getText(), ICCTF.getText()
                        ).getJsonResponse()
                );
                break;

            case "Bloquear IMEI":
            case "Desbloquear IMEI":
                addText(selectedItem + "\n"
                        + new IMEI().operation(imeiTF.getText(),
                                selectedItem.equals("Bloquear IMEI") ? "lock" : "unlock").
                                getJsonResponse());

                break;

            //Clientes Batch
            case "Activar Oferta MSISDNs":                
            case "Suspender MSISDNs":
            case "Compra Bonos a MSISDNs":
            case "Reanudar MSISDNs":
            case "Reactivar MSISDNs":
            case "Baja MSISDNs":
            case "Cambio Oferta primaria MSISDNs":
                
                if (selectedItem.equals("Activar Oferta MSISDNs")){
                    operation = "activations";
                } else if (selectedItem.equals("Suspender MSISDNs")){
                    operation = "suspends";
                }else if (selectedItem.equals("Compra Bonos a MSISDNs")){
                    operation = "purchasessupplementary";
                }else if (selectedItem.equals("Reanudar MSISDNs")){
                    operation = "resumes";
                }else if (selectedItem.equals("Reactivar MSISDNs")){
                    operation = "reactivates";
                }else if (selectedItem.equals("Baja MSISDNs")){
                    operation = "deactivates";
                }else if (selectedItem.equals("Cambio Oferta primaria MSISDNs")){
                    operation = "changesprimary";
                }
                
                addText(new Batch().activate(fileTF.getText(), "activations").getJsonResponse());

                break;

    }//GEN-LAST:event_sendBttnActionPerformed
    }
    private void msisdnTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msisdnTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_msisdnTFActionPerformed

    private void requestTypeCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTypeCBActionPerformed
        switch (requestTypeCB.getSelectedIndex()) {
            case 0:
                requestCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"AccessToken"}));
                requestCB.setSelectedItem(0);
                break;
            case 1:
                requestCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Serviciability"}));
                requestCB.setSelectedItem(0);
                break;

            case 2:
                requestCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Estado de una orden"}));
                requestCB.setSelectedItem(-1);
                break;

            case 3:
                requestCB.setModel(new javax.swing.DefaultComboBoxModel<>(
                        new String[]{"Bloquear IMEI", "Desbloquear IMEI",
                            "Cambiar Oferta Primaria", "Cambio de SIM",
                            "Activar Oferta MSISDN", "Baja de MSISDN", "Suspender MSISDN",
                            "Reanudar MSISDN", "Reactivar MSISDN",
                            "Consultar Perfil", "Compra de Bonos"}));
                requestCB.setSelectedItem(-1);
                break;

            case 4:
                requestCB.setModel(new javax.swing.DefaultComboBoxModel<>(
                        new String[]{"Activar Oferta MSISDNs", "Suspender MSISDNs",
                            "Compra Bonos a MSISDNs", "Reanudar MSISDNs",
                            "Reactivar MSISDNs", "Baja MSISDNs",
                            "Cambio Oferta primaria MSISDNs"}));
                requestCB.setSelectedItem(-1);
                break;

        }


    }//GEN-LAST:event_requestTypeCBActionPerformed

    private void requestCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestCBActionPerformed
        String selectedRequest = (String) requestCB.getSelectedItem();

        switch (selectedRequest) {
            case "Activar Oferta MSISDN":
            case "Cambiar Oferta Primaria":
                offeringCB.setModel(new javax.swing.DefaultComboBoxModel<>(
                        new String[]{"1000000030|T1-HBBIH-Postpaid Default",
                            "1101000030|NETWEY-HBBIH-0 Pos 10 ONEOFF",
                            "1102000030|NETWEY-HBBIH-0 Pos 20 ONEOFF",
                            "1001000537|T1-HBBIH-5 Pos 10 FUP",
                            "1002001037|T1-HBBIH-10 Pos 20 FUP",
                            "1002001030|T1-HBBIH-10 Pos 20 FUP Unlimit"}));
                break;

            case "Compra de Bonos":
                offeringCB.setModel(new javax.swing.DefaultComboBoxModel<>(
                        new String[]{"1201000230|NETWEY-HBBIH-Pos Add 2G",
                            "1201000530|NETWEY-HBBIH-Pos Add 5G",
                            "1202000230|NETWEY-HBBIH-20 Pos Add 2G",
                            "1202000530|NETWEY-HBBIH-20 Pos Add 5G",
                            "1201000236|T1-HBBIH-Pos Add 2G",
                            "1201000536|T1-HBBIH-Pos Add 5G",
                            "1201001036|T1-HBBIH-Pos Add 10G"}));
                break;

        }

    }//GEN-LAST:event_requestCBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(MainFrame.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            fileTF.setText(fc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ICCTF;
    private javax.swing.JTextField accessCodeTF;
    private javax.swing.JLabel accessTokebLb;
    private javax.swing.JTextField fileTF;
    private javax.swing.JTextField imeiTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField locationTF;
    private javax.swing.JTextField msisdnTF;
    private javax.swing.JComboBox<String> offeringCB;
    private javax.swing.JTextField orderIdTF;
    private javax.swing.JComboBox<String> requestCB;
    private javax.swing.JComboBox<String> requestTypeCB;
    private javax.swing.JButton sendBttn;
    // End of variables declaration//GEN-END:variables

}
